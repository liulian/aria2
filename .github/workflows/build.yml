name: build

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04]
        compiler: [gcc, clang]

    steps:
    - uses: actions/checkout@v2
    - name: Linux setup
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install \
          g++-8 \
          autoconf \
          automake \
          autotools-dev \
          autopoint \
          libtool \
          pkg-config \
          libssl-dev \
          libc-ares-dev \
          zlib1g-dev \
          libsqlite3-dev \
          libssh2-1-dev \
          libcppunit-dev \
          libgnutls28-dev nettle-dev libgmp-dev libssh2-1-dev libc-ares-dev libxml2-dev zlib1g-dev libsqlite3-dev pkg-config \
          libunistring-dev
    - name: Setup clang
      if: matrix.compiler == 'clang'
      run: |
        echo 'CC=clang' >> $GITHUB_ENV
        echo 'CXX=clang++' >> $GITHUB_ENV
    - name: Setup gcc
      if: runner.os == 'Linux' && matrix.compiler == 'gcc'
      run: |
        echo 'CC=gcc-8' >> $GITHUB_ENV
        echo 'CXX=g++-8' >> $GITHUB_ENV
    - name: Libtool
      run: |
        autoreconf -i
    - name: Configure autotools (Linux)
      if: runner.os == 'Linux'
      run: |
        ./configure \
          ARIA2_STATIC=yes \
          --with-gnutls --without-openssl --without-appletls --without-wintls \
          --with-ca-bundle='/etc/ssl/certs/ca-certificates.crt'
    - name: Build aria2
      run: |
        make
        make check
